package com.riskvis.entity;

// Generated May 12, 2014 11:45:38 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Insurances generated by hbm2java
 */
@Entity
@Table(name = "insurances", catalog = "test")
public class Insurances extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = -7949602031024346428L;
	private Integer idinsurances;
	private String name;
	private String description;
	private byte[] icon;
	private BigDecimal cost;
	private Set<InsurancesHasTransportationrisks> insurancesHasTransportationriskses = new HashSet<InsurancesHasTransportationrisks>(
			0);
	private Set<Players> playerses = new HashSet<Players>(0);
	private Set<InsurancesHasPlacesrisks> insurancesHasPlacesriskses = new HashSet<InsurancesHasPlacesrisks>(
			0);

	public Insurances() {
	}

	public Insurances(String name, BigDecimal cost) {
		this.name = name;
		this.cost = cost;
	}

	public Insurances(
			String name,
			String description,
			byte[] icon,
			BigDecimal cost,
			Set<InsurancesHasTransportationrisks> insurancesHasTransportationriskses,
			Set<Players> playerses,
			Set<InsurancesHasPlacesrisks> insurancesHasPlacesriskses) {
		this.name = name;
		this.description = description;
		this.icon = icon;
		this.cost = cost;
		this.insurancesHasTransportationriskses = insurancesHasTransportationriskses;
		this.playerses = playerses;
		this.insurancesHasPlacesriskses = insurancesHasPlacesriskses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idinsurances", unique = true, nullable = false)
	public Integer getIdinsurances() {
		return this.idinsurances;
	}

	public void setIdinsurances(Integer idinsurances) {
		this.idinsurances = idinsurances;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 512)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "icon")
	public byte[] getIcon() {
		return this.icon;
	}

	public void setIcon(byte[] icon) {
		this.icon = icon;
	}

	@Column(name = "cost", nullable = false, precision = 10)
	public BigDecimal getCost() {
		return this.cost;
	}

	public void setCost(BigDecimal cost) {
		this.cost = cost;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "insurances")
	@Cascade({ CascadeType.DELETE })
	public Set<InsurancesHasTransportationrisks> getInsurancesHasTransportationriskses() {
		return this.insurancesHasTransportationriskses;
	}

	public void setInsurancesHasTransportationriskses(
			Set<InsurancesHasTransportationrisks> insurancesHasTransportationriskses) {
		this.insurancesHasTransportationriskses = insurancesHasTransportationriskses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "players_has_insurances", catalog = "test", joinColumns = { @JoinColumn(name = "insurances_idinsurances", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "players_idplayers", nullable = false, updatable = false) })
	public Set<Players> getPlayerses() {
		return this.playerses;
	}

	public void setPlayerses(Set<Players> playerses) {
		this.playerses = playerses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "insurances")
	@Cascade({ CascadeType.DELETE })
	public Set<InsurancesHasPlacesrisks> getInsurancesHasPlacesriskses() {
		return this.insurancesHasPlacesriskses;
	}

	public void setInsurancesHasPlacesriskses(
			Set<InsurancesHasPlacesrisks> insurancesHasPlacesriskses) {
		this.insurancesHasPlacesriskses = insurancesHasPlacesriskses;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((idinsurances == null) ? 0 : idinsurances.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Insurances other = (Insurances) obj;
		if (idinsurances == null) {
			if (other.idinsurances != null)
				return false;
		} else if (!idinsurances.equals(other.idinsurances))
			return false;
		return true;
	}

}
