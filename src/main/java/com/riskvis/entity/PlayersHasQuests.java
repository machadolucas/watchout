package com.riskvis.entity;

// Generated May 12, 2014 11:45:38 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * PlayersHasQuests generated by hbm2java
 */
@Entity
@Table(name = "players_has_quests", catalog = "test")
public class PlayersHasQuests extends AbstractEntity implements
		java.io.Serializable {

	private static final long serialVersionUID = -1710068303943569206L;
	private PlayersHasQuestsId id;
	private Quests quests;
	private Places places;
	private Players players;
	private boolean completed;
	private BigDecimal cashAmount;
	private int energyAmount;
	private Set<QuestInsurances> questInsuranceses = new HashSet<QuestInsurances>(
			0);
	private Set<TurnsHistory> turnsHistories = new HashSet<TurnsHistory>(0);

	public PlayersHasQuests() {
	}

	public PlayersHasQuests(PlayersHasQuestsId id, Quests quests,
			Places places, Players players, boolean completed,
			BigDecimal cashAmount, int energyAmount) {
		this.id = id;
		this.quests = quests;
		this.places = places;
		this.players = players;
		this.completed = completed;
		this.cashAmount = cashAmount;
		this.energyAmount = energyAmount;
	}

	public PlayersHasQuests(PlayersHasQuestsId id, Quests quests,
			Places places, Players players, boolean completed,
			BigDecimal cashAmount, int energyAmount,
			Set<QuestInsurances> questInsuranceses,
			Set<TurnsHistory> turnsHistories) {
		this.id = id;
		this.quests = quests;
		this.places = places;
		this.players = players;
		this.completed = completed;
		this.cashAmount = cashAmount;
		this.energyAmount = energyAmount;
		this.questInsuranceses = questInsuranceses;
		this.turnsHistories = turnsHistories;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "playersIdplayers", column = @Column(name = "players_idplayers", nullable = false)),
			@AttributeOverride(name = "questsIdquests", column = @Column(name = "quests_idquests", nullable = false)) })
	public PlayersHasQuestsId getId() {
		return this.id;
	}

	public void setId(PlayersHasQuestsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "quests_idquests", nullable = false, insertable = false, updatable = false)
	public Quests getQuests() {
		return this.quests;
	}

	public void setQuests(Quests quests) {
		this.quests = quests;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "last_place", nullable = false)
	public Places getPlaces() {
		return this.places;
	}

	public void setPlaces(Places places) {
		this.places = places;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "players_idplayers", nullable = false, insertable = false, updatable = false)
	public Players getPlayers() {
		return this.players;
	}

	public void setPlayers(Players players) {
		this.players = players;
	}

	@Column(name = "completed", nullable = false)
	public boolean isCompleted() {
		return this.completed;
	}

	public void setCompleted(boolean completed) {
		this.completed = completed;
	}

	@Column(name = "cash_amount", nullable = false, precision = 10)
	public BigDecimal getCashAmount() {
		return this.cashAmount;
	}

	public void setCashAmount(BigDecimal cashAmount) {
		this.cashAmount = cashAmount;
	}

	@Column(name = "energy_amount", nullable = false)
	public int getEnergyAmount() {
		return this.energyAmount;
	}

	public void setEnergyAmount(int energyAmount) {
		this.energyAmount = energyAmount;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "playersHasQuests")
	@Cascade({ CascadeType.DELETE })
	public Set<QuestInsurances> getQuestInsuranceses() {
		return this.questInsuranceses;
	}

	public void setQuestInsuranceses(Set<QuestInsurances> questInsuranceses) {
		this.questInsuranceses = questInsuranceses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "playersHasQuests")
	@Cascade({ CascadeType.DELETE })
	public Set<TurnsHistory> getTurnsHistories() {
		return this.turnsHistories;
	}

	public void setTurnsHistories(Set<TurnsHistory> turnsHistories) {
		this.turnsHistories = turnsHistories;
	}

}
