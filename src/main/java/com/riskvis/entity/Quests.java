package com.riskvis.entity;

// Generated May 12, 2014 11:45:38 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * Quests generated by hbm2java
 */
@Entity
@Table(name = "quests", catalog = "test")
public class Quests extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 3673286629610146872L;
	private Integer idquests;
	private Places placesByOrigin;
	private Places placesByDestination;
	private String name;
	private String description;
	private Set<PlayersHasQuests> playersHasQuestses = new HashSet<PlayersHasQuests>(
			0);

	public Quests() {
	}

	public Quests(Places placesByOrigin, Places placesByDestination, String name) {
		this.placesByOrigin = placesByOrigin;
		this.placesByDestination = placesByDestination;
		this.name = name;
	}

	public Quests(Places placesByOrigin, Places placesByDestination,
			String name, String description,
			Set<PlayersHasQuests> playersHasQuestses) {
		this.placesByOrigin = placesByOrigin;
		this.placesByDestination = placesByDestination;
		this.name = name;
		this.description = description;
		this.playersHasQuestses = playersHasQuestses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idquests", unique = true, nullable = false)
	public Integer getIdquests() {
		return this.idquests;
	}

	public void setIdquests(Integer idquests) {
		this.idquests = idquests;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "origin", nullable = false)
	public Places getPlacesByOrigin() {
		return this.placesByOrigin;
	}

	public void setPlacesByOrigin(Places placesByOrigin) {
		this.placesByOrigin = placesByOrigin;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "destination", nullable = false)
	public Places getPlacesByDestination() {
		return this.placesByDestination;
	}

	public void setPlacesByDestination(Places placesByDestination) {
		this.placesByDestination = placesByDestination;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 1024)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quests")
	@Cascade({ CascadeType.DELETE })
	public Set<PlayersHasQuests> getPlayersHasQuestses() {
		return this.playersHasQuestses;
	}

	public void setPlayersHasQuestses(Set<PlayersHasQuests> playersHasQuestses) {
		this.playersHasQuestses = playersHasQuestses;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((idquests == null) ? 0 : idquests.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Quests other = (Quests) obj;
		if (idquests == null) {
			if (other.idquests != null)
				return false;
		} else if (!idquests.equals(other.idquests))
			return false;
		return true;
	}

}
