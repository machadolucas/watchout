package com.riskvis.entity;

// Generated May 12, 2014 11:45:38 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Admins generated by hbm2java
 */
@Entity
@Table(name = "admins", catalog = "test", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Admins extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = 861038284257947169L;
	private Integer idadmins;
	private String name;
	private String email;
	private String password;

	public Admins() {
	}

	public Admins(String name, String email, String password) {
		this.name = name;
		this.email = email;
		this.password = password;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idadmins", unique = true, nullable = false)
	public Integer getIdadmins() {
		return this.idadmins;
	}

	public void setIdadmins(Integer idadmins) {
		this.idadmins = idadmins;
	}

	@Column(name = "name", nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", unique = true, nullable = false, length = 64)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((idadmins == null) ? 0 : idadmins.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Admins other = (Admins) obj;
		if (idadmins == null) {
			if (other.idadmins != null)
				return false;
		} else if (!idadmins.equals(other.idadmins))
			return false;
		return true;
	}

}
